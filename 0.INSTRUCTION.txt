		Project UNO - Music Player 

Requirements:
	1. Music Library 
	2. Playlists
	3. Queues
	4. Data Storage
	

Play Music => Playlist
Music Library => Data Storage
Playlists => Queues => Data Storage

Main Menu
      0. Play Music 
      1. Music Library (Add, Delete, Update, View)
      2. Playlist 
      3. Exit (Prompts the user to save his/her new progress: Y/N) #If Y it would save all progress especially the last played music.

Option 0:
Play Music
	[1] Play 
	[2] Next 
	[3] Previous 
	[4] Turn off repeat 
	[5] Turn on shuffle 
	[6] Clear queue 
	[7] Exit 


Option 1:
Music Library
      1: Add Track
      2: View Tracks (Show All Track - able to update, delete)
      3: Search Tracks (Specific Track - able to update, delete)
	1. Track title 
	2. Artist Name 
	3. Album 
	4. Duration 
	5. Date and Time
      4: Go back to main menu 

Option 2:
Playlist
     1: Create Playlist
     2: View Playlists
     3: Add Track to Playlist
     4: Go back to main menu







Challenges:
	1. Shuffle and Repeat
	2. Album Tracking
	3. Importing Tracks
	4. Sorter

Limitation and Warning:
	You are forbidden in using most built-in Python classes. The only exception is when
you are implementing code for reading / writing data storage permanently. All classes must
be defined by you and your group. Violating this note will result in significant sanctions
imposed by your instructor.
For any student with similar code submissions, ignoring variable/function/class name changes, 
white spacing, etc., your score will be divided upon how many other students is found to share
such code similarity. Since you decide to submit the same output, then it is reasonable that t
he score will be divided upon each and everyone involved
in such practice.
	


